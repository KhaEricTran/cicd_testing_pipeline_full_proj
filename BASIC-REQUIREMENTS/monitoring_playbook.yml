---
- name: Install and Configure Monitoring Tools (Prometheus and Grafana)
  hosts: aws_ec2
  become: yes
  tasks:
    # Prometheus Configuration
    - name: Create Prometheus configuration directory
      file:
        path: /etc/prometheus
        state: directory

    - name: Create Prometheus configuration for Kubernetes monitoring
      copy:
        dest: /etc/prometheus/prometheus.yml
        content: |
          global:
            scrape_interval: 15s
          scrape_configs:
            - job_name: 'kubernetes-nodes'
              kubernetes_sd_configs:
                - role: node
            - job_name: 'kubernetes-pods'
              kubernetes_sd_configs:
                - role: pod
            - job_name: 'store-app'
              static_configs:
                - targets: ['a894facca31e7414a98522d544a27fbb-222917574.us-east-1.elb.amazonaws.com:80']
  
    - name: Add Kubernetes API server access to Prometheus configuration
      blockinfile:
        path: /etc/prometheus/prometheus.yml
        block: |
          scrape_configs:
            - job_name: 'kubernetes'
              kubernetes_sd_configs:
                - role: pod
                  api_server: 'https://<K8S_API_ENDPOINT>'  # Replace with your Kubernetes API server endpoint
                  tls_config:
                    ca_file: '/path/to/ca.crt'            # Path to CA certificate for Kubernetes API
                    insecure_skip_verify: false
                  bearer_token_file: '/path/to/token'    # Path to the bearer token for authentication
        marker: "# {mark} ANSIBLE MANAGED BLOCK for Kubernetes API"

    # Deploy Prometheus
    - name: Install and start Prometheus
      docker_container:
        name: prometheus
        image: prom/prometheus:v2.26.0
        ports:
          - "9090:9090"
        volumes:
          - /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        state: started
        restart_policy: unless-stopped

    # Deploy Grafana
    - name: Install and start Grafana
      docker_container:
        name: grafana
        image: grafana/grafana:7.5.0
        ports:
          - "3000:3000"
        state: started
        restart_policy: unless-stopped
