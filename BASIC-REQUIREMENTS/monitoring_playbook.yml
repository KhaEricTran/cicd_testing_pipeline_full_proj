---
- name: Install and Configure Monitoring Tools (Prometheus and Grafana)
  hosts: aws_ec2
  become: yes
  tasks:
    # Prometheus Configuration
    - name: Create Prometheus configuration directory
      file:
        path: /etc/prometheus
        state: directory

    - name: Create Prometheus configuration for Kubernetes monitoring
      copy:
        dest: /etc/prometheus/prometheus.yml
        content: |
          global:
            scrape_interval: 15s
          scrape_configs:
            - job_name: 'kubernetes-nodes'
              kubernetes_sd_configs:
                - role: node
            - job_name: 'kubernetes-pods'
              kubernetes_sd_configs:
                - role: pod
            - job_name: 'store-app'
              static_configs:
                - targets: ['a894facca31e7414a98522d544a27fbb-222917574.us-east-1.elb.amazonaws.com:80']
    
    # Copy Kubernetes CA certificate to Prometheus server
    - name: Copy Kubernetes CA certificate to Prometheus server
      copy:
        src: /local/path/to/ca.crt  # Update this path
        dest: /etc/prometheus/ca.crt
        mode: '0644'

    # Copy Kubernetes bearer token to Prometheus server
    - name: Copy Kubernetes bearer token to Prometheus server
      copy:
        src: /local/path/to/token.txt  # Update this path
        dest: /etc/prometheus/token
        mode: '0644'

    # Add Kubernetes API server access to Prometheus configuration
    - name: Add Kubernetes API server access to Prometheus configuration
      blockinfile:
        path: /etc/prometheus/prometheus.yml
        block: |
          scrape_configs:
            - job_name: 'kubernetes'
              kubernetes_sd_configs:
                - role: pod
                  api_server: 'https://031BACF7588692FDD2B5CA9A2D5A0B48.gr7.us-east-1.eks.amazonaws.com'  # Your Kubernetes API server endpoint
                  tls_config:
                    ca_file: '/etc/prometheus/ca.crt'
                    insecure_skip_verify: false
                  bearer_token_file: '/etc/prometheus/token'
        marker: "# {mark} ANSIBLE MANAGED BLOCK for Kubernetes API"

    # Deploy Prometheus
    - name: Install and start Prometheus
      docker_container:
        name: prometheus
        image: prom/prometheus:v2.26.0
        ports:
          - "9090:9090"
        volumes:
          - /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
          - /etc/prometheus/ca.crt:/etc/prometheus/ca.crt
          - /etc/prometheus/token:/etc/prometheus/token
        state: started
        restart_policy: unless-stopped

    # Deploy Grafana
    - name: Install and start Grafana
      docker_container:
        name: grafana
        image: grafana/grafana:7.5.0
        ports:
          - "3000:3000"
        state: started
        restart_policy: unless-stopped
